package com.luebeck.external;

import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class UcumLBKServiceTest {

    UcumLBKService e = new UcumLBKService();

    @org.junit.jupiter.api.Test
    void isValid() {
        //FuncTest
        assertEquals(true, e.isValid("m"));
        assertEquals(true, e.isValid("m"));
        assertEquals(false, e.isValid("m/"));
        assertEquals(false, e.isValid(""));
        assertEquals(true, e.isValid("/m"));
        assertEquals(true, e.isValid("10*3/ul"));
        assertEquals(true, e.isValid("10*-3/ul"));
        assertEquals(true, e.isValid("10*+3/ul"));
        assertEquals(true, e.isValid("10+3/ul")); //actually true, plus sign exponents are valid for int
        assertEquals(true, e.isValid("m"));
        assertEquals(true, e.isValid("m[H2O]"));
        assertEquals(true, e.isValid("10*23"));
        assertEquals(true, e.isValid("rad2"));
        assertEquals(true, e.isValid("m3.kg-1.s-2"));
        assertEquals(true, e.isValid("4.[pi].10*-7.N/A2"));
        assertEquals(true, e.isValid("rad2{a}"));
        assertEquals(false, e.isValid("rad2{éŒ }"));
        assertEquals(true, e.isValid("{a}.rad2{b}"));
        assertEquals(false, e.isValid("{a}rad2{b}"));
        assertEquals(true, e.isValid("1{c}"));
        assertEquals(false, e.isValid("{|}1"));
        assertEquals(true, e.isValid("{e}"));
        assertEquals(true, e.isValid("%"));
        assertEquals(true, e.isValid("[cup_us]"));
        assertEquals(true, e.isValid("[foz_br]"));
        assertEquals(true, e.isValid("[ft_i]"));
        assertEquals(true, e.isValid("[in_i]"));
        assertEquals(true, e.isValid("[yd_i]"));
        assertEquals(true, e.isValid("[gal_br]"));
        assertEquals(true, e.isValid("[lb_av]"));
        assertEquals(true, e.isValid("[oz_av]"));
        assertEquals(true, e.isValid("[pt_br]"));
        assertEquals(true, e.isValid("[qt_br]"));
        assertEquals(true, e.isValid("[sft_i]"));
        assertEquals(true, e.isValid("[sin_i]"));
        assertEquals(true, e.isValid("[syd_i]"));
        assertEquals(true, e.isValid("[tbs_us]"));
        assertEquals(true, e.isValid("[tsp_us]"));
        assertEquals(true, e.isValid("1/d"));
        assertEquals(true, e.isValid("1/min"));
        assertEquals(true, e.isValid("a"));
        assertEquals(true, e.isValid("cm"));
        assertEquals(true, e.isValid("cm2"));
        assertEquals(true, e.isValid("cm3"));
        assertEquals(true, e.isValid("d"));
        assertEquals(true, e.isValid("dg"));
        assertEquals(true, e.isValid("dl"));
        assertEquals(true, e.isValid("g"));
        assertEquals(true, e.isValid("g/d"));
        assertEquals(true, e.isValid("g/l"));
        assertEquals(true, e.isValid("h"));
        assertEquals(false, e.isValid("iU"));
        assertEquals(true, e.isValid("kg"));
        assertEquals(true, e.isValid("l"));
        assertEquals(true, e.isValid("m"));
        assertEquals(true, e.isValid("mm"));
        assertEquals(true, e.isValid("m2"));
        assertEquals(true, e.isValid("meq"));
        assertEquals(true, e.isValid("mg"));
        assertEquals(true, e.isValid("mg"));
        assertEquals(true, e.isValid("mg/d"));
        assertEquals(true, e.isValid("min"));
        assertEquals(true, e.isValid("ml"));
        assertEquals(true, e.isValid("ml/s"));
        assertEquals(true, e.isValid("mm[Hg]"));
        assertEquals(true, e.isValid("mm2"));
        assertEquals(true, e.isValid("mm3"));
        assertEquals(true, e.isValid("mmol"));
        assertEquals(true, e.isValid("mmol/l"));
        assertEquals(true, e.isValid("mo"));
        assertEquals(true, e.isValid("mol"));
        assertEquals(true, e.isValid("ms"));
        assertEquals(true, e.isValid("mU"));
        assertEquals(true, e.isValid("ng"));
        assertEquals(true, e.isValid("ng"));
        assertEquals(true, e.isValid("nl"));
        assertEquals(true, e.isValid("nl"));
        assertEquals(true, e.isValid("pg/ml"));
        assertEquals(true, e.isValid("s"));
        assertEquals(true, e.isValid("U"));
        assertEquals(true, e.isValid("U/l"));
        assertEquals(true, e.isValid("ug"));
        assertEquals(true, e.isValid("ug/min"));
        assertEquals(true, e.isValid("ul"));
        assertEquals(true, e.isValid("umol"));
        assertEquals(true, e.isValid("umol/l"));
        assertEquals(true, e.isValid("wk"));
        assertEquals(true, e.isValid("%"));
        assertEquals(true, e.isValid("[cup_us]"));
        assertEquals(true, e.isValid("[foz_br]"));
        assertEquals(true, e.isValid("[gal_br]"));
        assertEquals(true, e.isValid("[sft_i]"));
        assertEquals(true, e.isValid("[sin_i]"));
        assertEquals(true, e.isValid("[lb_av]"));
        assertEquals(true, e.isValid("[oz_av]"));
        assertEquals(true, e.isValid("[pt_br]"));
        assertEquals(true, e.isValid("[qt_br]"));
        assertEquals(true, e.isValid("[tbs_us]"));
        assertEquals(true, e.isValid("[tsp_us]"));
        assertEquals(true, e.isValid("[syd_i]"));
        assertEquals(true, e.isValid("cm2"));
        assertEquals(true, e.isValid("cm3"));
        assertEquals(true, e.isValid("g"));
        assertEquals(true, e.isValid("kg"));
        assertEquals(true, e.isValid("l"));
        assertEquals(true, e.isValid("m2"));
        assertEquals(true, e.isValid("meq"));
        assertEquals(true, e.isValid("mg"));
        assertEquals(true, e.isValid("ml"));
        assertEquals(true, e.isValid("mm2"));
        assertEquals(true, e.isValid("mm3"));
        assertEquals(true, e.isValid("mmol"));
        assertEquals(false, e.isValid("molv"));
        assertEquals(true, e.isValid("mU"));
        assertEquals(true, e.isValid("ng"));
        assertEquals(true, e.isValid("nl"));
        assertEquals(true, e.isValid("U"));
        assertEquals(true, e.isValid("ug"));
        assertEquals(true, e.isValid("ul"));
        assertEquals(true, e.isValid("umol"));
        assertEquals(true, e.isValid("a"));
        assertEquals(true, e.isValid("d"));
        assertEquals(true, e.isValid("h"));
        assertEquals(true, e.isValid("min"));
        assertEquals(true, e.isValid("mo"));
        assertEquals(true, e.isValid("s"));
        assertEquals(true, e.isValid("wk"));
        assertEquals(true, e.isValid("[ft_i]"));
        assertEquals(true, e.isValid("[in_i]"));
        assertEquals(true, e.isValid("[lb_av]"));
        assertEquals(true, e.isValid("[oz_av]"));
        assertEquals(true, e.isValid("[yd_i]"));
        assertEquals(true, e.isValid("cm"));
        assertEquals(true, e.isValid("g"));
        assertEquals(true, e.isValid("kg"));
        assertEquals(true, e.isValid("m"));
        assertEquals(true, e.isValid("mm"));
        assertEquals(true, e.isValid("[mi_us]"));
        assertEquals(true, e.isValid("[yd_i]"));
        assertEquals(true, e.isValid("deg"));
        assertEquals(true, e.isValid("km"));
        assertEquals(true, e.isValid("m"));
        assertEquals(true, e.isValid("%"));
        assertEquals(true, e.isValid("/[HPF]"));
        assertEquals(true, e.isValid("/[LPF]"));
        assertEquals(true, e.isValid("/L"));
        assertEquals(true, e.isValid("/mL"));
        assertEquals(true, e.isValid("/mmol"));
        assertEquals(true, e.isValid("[APL'U]"));
        assertEquals(true, e.isValid("[BETH'U]")); //Is actually true, just its capital name
        assertEquals(true, e.isValid("[GPL'U]"));
        assertEquals(true, e.isValid("[IU]"));
        assertEquals(true, e.isValid("[IU]/d"));
        assertEquals(true, e.isValid("[IU]/L"));
        assertEquals(true, e.isValid("[IU]/mL"));
        assertEquals(false, e.isValid("[iIU]"));
        assertEquals(false, e.isValid("[iIU]/d"));
        assertEquals(false, e.isValid("[iIU]/L"));
        assertEquals(false, e.isValid("[iIU]/mL"));
        assertEquals(true, e.isValid("[MPL'U]"));
        assertEquals(true, e.isValid("10*12/L"));
        assertEquals(true, e.isValid("10*6/L"));
        assertEquals(true, e.isValid("10*9/L"));
        assertEquals(true, e.isValid("Cel"));
        assertEquals(true, e.isValid("cm"));
        assertEquals(true, e.isValid("cm/s"));
        assertEquals(true, e.isValid("fL"));
        assertEquals(true, e.isValid("fmol/L"));
        assertEquals(true, e.isValid("g"));
        assertEquals(false, e.isValid("g/12h"));
        assertEquals(false, e.isValid("g/48h"));
        assertEquals(false, e.isValid("g/4h"));
        assertEquals(false, e.isValid("g/6h"));
        assertEquals(false, e.isValid("g/72h"));
        assertEquals(true, e.isValid("g/d"));
        assertEquals(true, e.isValid("g/g"));
        assertEquals(true, e.isValid("g/L"));
        assertEquals(true, e.isValid("h"));
        assertEquals(true, e.isValid("km"));
        assertEquals(true, e.isValid("kU/L"));
        assertEquals(true, e.isValid("L/L"));
        assertEquals(true, e.isValid("m[IU]/L"));
        assertEquals(false, e.isValid("m[iIU]/L"));
        assertEquals(true, e.isValid("mg"));
        assertEquals(false, e.isValid("mg/12h"));
        assertEquals(true, e.isValid("mg/d"));
        assertEquals(true, e.isValid("mg/g"));
        assertEquals(true, e.isValid("mg/L"));
        assertEquals(true, e.isValid("mg/mg"));
        assertEquals(true, e.isValid("mg/mL"));
        assertEquals(true, e.isValid("min"));
        assertEquals(true, e.isValid("mL"));
        assertEquals(false, e.isValid("mL/10h"));
        assertEquals(false, e.isValid("mL/12h"));
        assertEquals(false, e.isValid("mL/2h"));
        assertEquals(false, e.isValid("mL/4h"));
        assertEquals(false, e.isValid("mL/5h"));
        assertEquals(false, e.isValid("mL/6h"));
        assertEquals(false, e.isValid("mL/72h"));
        assertEquals(false, e.isValid("mL/8h"));
        assertEquals(true, e.isValid("mL/d"));
        assertEquals(true, e.isValid("mL/min"));
        assertEquals(true, e.isValid("mm"));
        assertEquals(true, e.isValid("mm/h"));
        assertEquals(true, e.isValid("mm[Hg]"));
        assertEquals(true, e.isValid("mmol"));
        assertEquals(false, e.isValid("mmol/12h"));
        assertEquals(false, e.isValid("mmol/5h"));
        assertEquals(false, e.isValid("mmol/6h"));
        assertEquals(true, e.isValid("mmol/d"));
        assertEquals(true, e.isValid("mmol/g"));
        assertEquals(true, e.isValid("mmol/kg"));
        assertEquals(false, e.isValid("mmol/kg[H20]"));
        assertEquals(true, e.isValid("mmol/L"));
        assertEquals(true, e.isValid("mmol/mmol"));
        assertEquals(true, e.isValid("mU/L"));
        assertEquals(true, e.isValid("ng/d"));
        assertEquals(true, e.isValid("ng/g"));
        assertEquals(true, e.isValid("ng/L"));
        assertEquals(true, e.isValid("ng/mL"));
        assertEquals(true, e.isValid("nmol/d"));
        assertEquals(true, e.isValid("nmol/g"));
        assertEquals(true, e.isValid("nmol/h/mL"));
        assertEquals(true, e.isValid("nmol/L"));
        assertEquals(true, e.isValid("nmol/mmol"));
        assertEquals(true, e.isValid("nmol/nmol"));
        assertEquals(true, e.isValid("pg"));
        assertEquals(true, e.isValid("pg/mL"));
        assertEquals(true, e.isValid("pmol/d"));
        assertEquals(true, e.isValid("pmol/g"));
        assertEquals(true, e.isValid("pmol/h/mg"));
        assertEquals(true, e.isValid("pmol/h/mL"));
        assertEquals(true, e.isValid("pmol/L"));
        assertEquals(true, e.isValid("pmol/mmol"));
        assertEquals(true, e.isValid("s"));
        assertEquals(true, e.isValid("U"));
        assertEquals(false, e.isValid("U/12h"));
        assertEquals(false, e.isValid("U/1h"));
        assertEquals(false, e.isValid("U/2h"));
        assertEquals(true, e.isValid("U/d"));
        assertEquals(true, e.isValid("U/g"));
        assertEquals(true, e.isValid("U/kg"));
        assertEquals(true, e.isValid("U/L"));
        assertEquals(true, e.isValid("U/mL"));
        assertEquals(true, e.isValid("u[IU]/mL"));
        assertEquals(false, e.isValid("u[iIU]/mL"));
        assertEquals(true, e.isValid("ug"));
        assertEquals(true, e.isValid("ug/d"));
        assertEquals(true, e.isValid("ug/g"));
        assertEquals(true, e.isValid("ug/L"));
        assertEquals(true, e.isValid("ug/mL"));
        assertEquals(true, e.isValid("um/s"));
        assertEquals(true, e.isValid("umol"));
        assertEquals(true, e.isValid("umol/2.h"));
        assertEquals(true, e.isValid("umol/d"));
        assertEquals(true, e.isValid("umol/g"));
        assertEquals(true, e.isValid("umol/L"));
        assertEquals(true, e.isValid("umol/mmol"));
        assertEquals(true, e.isValid("umol/umol"));
        assertEquals(true, e.isValid("wk"));
        assertEquals(true, e.isValid("[arb'U]"));
        assertEquals(true, e.isValid("dyn.s/(cm5.m2)"));
        assertEquals(true, e.isValid("[iU]/mL"));
        assertEquals(true, e.isValid("mL/h"));
        assertEquals(true, e.isValid("[bdsk'U]"));
        assertEquals(true, e.isValid("dyn.s/cm5"));
        assertEquals(true, e.isValid("K/W"));
        assertEquals(true, e.isValid("mm[Hg]"));
        assertEquals(true, e.isValid("{bsa}"));
        assertEquals(true, e.isValid("cm[H2O]"));
        assertEquals(false, e.isValid("cm[H20]"));
        assertEquals(true, e.isValid("kg{body_wt}"));
        assertEquals(true, e.isValid("mm/h"));
        assertEquals(true, e.isValid("cal"));
        assertEquals(true, e.isValid("cm[H2O].s/L"));
        assertEquals(true, e.isValid("kg/m2"));
        assertEquals(true, e.isValid("mmol/(8.h.kg)"));
        assertEquals(true, e.isValid("{cfu}"));
        assertEquals(true, e.isValid("cm[H2O]/(s.m)"));
        assertEquals(true, e.isValid("kg/h"));
        assertEquals(true, e.isValid("mmol/(8.h)"));
        assertEquals(true, e.isValid("[drp]"));
        assertEquals(true, e.isValid("dB[SPL]"));
        assertEquals(true, e.isValid("L/(8.h)"));
        assertEquals(true, e.isValid("mmol/(kg.h)"));
        assertEquals(true, e.isValid("[ka'U]"));
        assertEquals(true, e.isValid("REM"));
        assertEquals(true, e.isValid("L/h"));
        assertEquals(true, e.isValid("mmol/h"));
        assertEquals(true, e.isValid("kcal"));
        assertEquals(true, e.isValid("g{creat}"));
        assertEquals(true, e.isValid("[lb_av]"));
        assertEquals(true, e.isValid("ng/(8.h)"));
        assertEquals(true, e.isValid("kcal/(8.h)"));
        assertEquals(true, e.isValid("g{hgb}"));
        assertEquals(true, e.isValid("ng/(8.h.kg)"));
        assertEquals(true, e.isValid("kcal/d"));
        assertEquals(true, e.isValid("g{tit_nit}"));
        assertEquals(true, e.isValid("ms/s"));
        assertEquals(true, e.isValid("ng/(kg.h)"));
        assertEquals(true, e.isValid("kcal/h"));
        assertEquals(true, e.isValid("g{tot_prot}"));
        assertEquals(true, e.isValid("Ms"));
        assertEquals(true, e.isValid("ng/h"));
        assertEquals(true, e.isValid("[knk'U]"));
        assertEquals(true, e.isValid("g{wet_tis}"));
        assertEquals(true, e.isValid("meq/(8.h)"));
        assertEquals(true, e.isValid("osm"));
        assertEquals(true, e.isValid("[mclg'U]"));
        assertEquals(true, e.isValid("g.m/m2{hb}"));
        assertEquals(true, e.isValid("meq/(8.h.kg)"));
        assertEquals(true, e.isValid("osm/kg"));
        assertEquals(true, e.isValid("{od}"));
        assertEquals(true, e.isValid("g.m/{hb}"));
        assertEquals(true, e.isValid("meq/(kg.h)"));
        assertEquals(true, e.isValid("osm/L"));
        assertEquals(true, e.isValid("pH"));
        assertEquals(true, e.isValid("g/(8.h)"));
        assertEquals(true, e.isValid("meq/h"));
        assertEquals(true, e.isValid("pA"));
        assertEquals(true, e.isValid("[ppb]"));
        assertEquals(true, e.isValid("g/(8.kg.h)"));
        assertEquals(true, e.isValid("mg/(8.h)"));
        assertEquals(true, e.isValid("Pa"));
        assertEquals(true, e.isValid("[ppm]"));
        assertEquals(true, e.isValid("g/(kg.h)"));
        assertEquals(true, e.isValid("mg/(8.h.kg)"));
        assertEquals(true, e.isValid("[pptr]"));
        assertEquals(true, e.isValid("g/h"));
        assertEquals(true, e.isValid("mg/(kg.h)"));
        assertEquals(true, e.isValid("S"));
        assertEquals(true, e.isValid("[ppth]"));
        assertEquals(true, e.isValid("[in_us]"));
        assertEquals(true, e.isValid("mg/h"));
        assertEquals(false, e.isValid("ug(8.h)"));
        assertEquals(false, e.isValid("ug(8hr)"));
        assertEquals(true, e.isValid("[todd'U]"));
        assertEquals(true, e.isValid("[in_i'Hg]"));
        assertEquals(true, e.isValid("m[iU]/mL"));
        assertEquals(true, e.isValid("ug/(8.h.kg)"));
        assertEquals(true, e.isValid("/[arb'U]"));
        assertEquals(true, e.isValid("[iU]"));
        assertEquals(true, e.isValid("mL/{hb}.m2"));
        assertEquals(true, e.isValid("ug/(kg.h)"));
        assertEquals(true, e.isValid("[HPF]"));
        assertEquals(true, e.isValid("[iU]/d"));
        assertEquals(true, e.isValid("mL/(8.h)"));
        assertEquals(true, e.isValid("ug/h"));
        assertEquals(true, e.isValid("/{tot}"));
        assertEquals(true, e.isValid("[iU]/h"));
        assertEquals(true, e.isValid("mL/(8.h.kg)"));
        assertEquals(true, e.isValid("u[iU]"));
        assertEquals(true, e.isValid("/[iU]"));
        assertEquals(true, e.isValid("[iU]/kg"));
        assertEquals(true, e.isValid("mL/{hb}"));
        assertEquals(true, e.isValid("10*3{rbc}"));
        assertEquals(true, e.isValid("[iU]/L"));
        assertEquals(true, e.isValid("mL/(kg.h)"));
        assertEquals(true, e.isValid("10.L/(min.m2)"));
        assertEquals(true, e.isValid("[iU]/min"));
        assertEquals(true, e.isValid("mL/cm[H2O]"));
        assertEquals(true, e.isValid("%"));
        assertEquals(true, e.isValid("bar"));
        assertEquals(true, e.isValid("g/L"));
        assertEquals(true, e.isValid("L.s"));
        assertEquals(true, e.isValid("mg"));
        assertEquals(true, e.isValid("mmol/(kg.d)"));
        assertEquals(true, e.isValid("ng/L"));
        assertEquals(true, e.isValid("ueq"));
        assertEquals(true, e.isValid("/kg"));
        assertEquals(true, e.isValid("Bq"));
        assertEquals(true, e.isValid("g/m2"));
        assertEquals(true, e.isValid("L/(min.m2)"));
        assertEquals(true, e.isValid("mg/(kg.d)"));
        assertEquals(true, e.isValid("mmol/(kg.min)"));
        assertEquals(true, e.isValid("ng/m2"));
        assertEquals(true, e.isValid("ug"));
        assertEquals(true, e.isValid("/L"));
        assertEquals(true, e.isValid("Cel"));
        assertEquals(true, e.isValid("g/min"));
        assertEquals(true, e.isValid("L/d"));
        assertEquals(true, e.isValid("mg/(kg.min)"));
        assertEquals(true, e.isValid("mmol/kg"));
        assertEquals(true, e.isValid("ng/min"));
        assertEquals(true, e.isValid("ug/(kg.d)"));
        assertEquals(true, e.isValid("/m3"));
        assertEquals(true, e.isValid("cm"));
        assertEquals(true, e.isValid("Gy"));
        assertEquals(true, e.isValid("L/kg"));
        assertEquals(true, e.isValid("mg/d"));
        assertEquals(true, e.isValid("mmol/L"));
        assertEquals(true, e.isValid("ng/mL"));
        assertEquals(true, e.isValid("ug/(kg.min)"));
        assertEquals(true, e.isValid("/min"));
        assertEquals(true, e.isValid("cm2/s"));
        assertEquals(true, e.isValid("h"));
        assertEquals(true, e.isValid("L/min"));
        assertEquals(true, e.isValid("mg/dL"));
        assertEquals(true, e.isValid("mmol/m2"));
        assertEquals(true, e.isValid("ng/s"));
        assertEquals(true, e.isValid("ug/d"));
        assertEquals(true, e.isValid("/m3"));
        assertEquals(true, e.isValid("d"));
        assertEquals(true, e.isValid("hL"));
        assertEquals(true, e.isValid("L/s"));
        assertEquals(true, e.isValid("mg/kg"));
        assertEquals(true, e.isValid("mmol/min"));
        assertEquals(true, e.isValid("nkat"));
        assertEquals(true, e.isValid("ug/dL"));
        assertEquals(true, e.isValid("/min"));
        assertEquals(true, e.isValid("dB"));
        assertEquals(true, e.isValid("J/L"));
        assertEquals(true, e.isValid("lm"));
        assertEquals(true, e.isValid("mg/L"));
        assertEquals(true, e.isValid("mol/(kg.s)"));
        assertEquals(true, e.isValid("nm"));
        assertEquals(true, e.isValid("ug/g"));
        assertEquals(true, e.isValid("/mL"));
        assertEquals(true, e.isValid("deg"));
        assertEquals(true, e.isValid("kat"));
        assertEquals(true, e.isValid("m"));
        assertEquals(true, e.isValid("mg/m2"));
        assertEquals(true, e.isValid("mol/kg"));
        assertEquals(true, e.isValid("nmol/s"));
        assertEquals(true, e.isValid("ug/kg"));
        assertEquals(true, e.isValid("1/mL"));
        assertEquals(true, e.isValid("eq"));
        assertEquals(true, e.isValid("kat/kg"));
        assertEquals(true, e.isValid("m/s2"));
        assertEquals(true, e.isValid("mg/m3"));
        assertEquals(true, e.isValid("mol/L"));
        assertEquals(true, e.isValid("ns"));
        assertEquals(true, e.isValid("ug/L"));
        assertEquals(true, e.isValid("10*12/L"));
        assertEquals(true, e.isValid("eV"));
        assertEquals(true, e.isValid("kat/L"));
        assertEquals(true, e.isValid("m2"));
        assertEquals(true, e.isValid("mg/min"));
        assertEquals(true, e.isValid("mol/m3"));
        assertEquals(true, e.isValid("Ohm"));
        assertEquals(true, e.isValid("ug/m2"));
        assertEquals(true, e.isValid("10*3/L"));
        assertEquals(true, e.isValid("kg"));
        assertEquals(true, e.isValid("m2/s"));
        assertEquals(true, e.isValid("mL"));
        assertEquals(true, e.isValid("mol/s"));
        assertEquals(true, e.isValid("Ohm.m"));
        assertEquals(true, e.isValid("ug/min"));
        assertEquals(true, e.isValid("10*3/mL"));
        assertEquals(true, e.isValid("fg"));
        assertEquals(true, e.isValid("kg.m/s"));
        assertEquals(true, e.isValid("m3/s"));
        assertEquals(true, e.isValid("mL/(kg.d)"));
        assertEquals(true, e.isValid("mosm/L"));
        assertEquals(true, e.isValid("pg"));
        assertEquals(true, e.isValid("ukat"));
        assertEquals(true, e.isValid("10*3/mm3"));
        assertEquals(true, e.isValid("fL"));
        assertEquals(true, e.isValid("kg/(s.m2)"));
        assertEquals(true, e.isValid("mbar"));
        assertEquals(true, e.isValid("mL/(kg.min)"));
        assertEquals(true, e.isValid("ms"));
        assertEquals(true, e.isValid("pg/L"));
        assertEquals(true, e.isValid("um"));
        assertEquals(true, e.isValid("10*6/L"));
        assertEquals(true, e.isValid("fmol"));
        assertEquals(true, e.isValid("kg/L"));
        assertEquals(true, e.isValid("mbar.s/L"));
        assertEquals(true, e.isValid("mL/(min.m2)"));
        assertEquals(true, e.isValid("mV"));
        assertEquals(true, e.isValid("pg/mL"));
        assertEquals(true, e.isValid("umol"));
        assertEquals(true, e.isValid("10*6/mL"));
        assertEquals(true, e.isValid("g"));
        assertEquals(true, e.isValid("kg/m3"));
        assertEquals(true, e.isValid("meq"));
        assertEquals(true, e.isValid("mL/d"));
        assertEquals(true, e.isValid("pkat"));
        assertEquals(true, e.isValid("umol/d"));
        assertEquals(true, e.isValid("10*6/mm3"));
        assertEquals(true, e.isValid("g.m"));
        assertEquals(true, e.isValid("kg/min"));
        assertEquals(true, e.isValid("meq/(kg.d)"));
        assertEquals(true, e.isValid("mL/kg"));
        assertEquals(true, e.isValid("pm"));
        assertEquals(true, e.isValid("umol/L"));
        assertEquals(true, e.isValid("10*9/L"));
        assertEquals(true, e.isValid("g/(kg.d)"));
        assertEquals(true, e.isValid("kg/mol"));
        assertEquals(true, e.isValid("meq/(kg.min)"));
        assertEquals(true, e.isValid("mL/m2"));
        assertEquals(true, e.isValid("ng"));
        assertEquals(true, e.isValid("pmol"));
        assertEquals(true, e.isValid("umol/min"));
        assertEquals(true, e.isValid("10*9/mL"));
        assertEquals(true, e.isValid("g/(kg.min)"));
        assertEquals(true, e.isValid("kg/s"));
        assertEquals(true, e.isValid("meq/d"));
        assertEquals(true, e.isValid("mL/mbar"));
        assertEquals(true, e.isValid("ng/(kg.d)"));
        assertEquals(true, e.isValid("ps"));
        assertEquals(true, e.isValid("us"));
        assertEquals(true, e.isValid("10*9/mm3"));
        assertEquals(true, e.isValid("g/d"));
        assertEquals(true, e.isValid("kPa"));
        assertEquals(true, e.isValid("meq/kg"));
        assertEquals(true, e.isValid("mL/min"));
        assertEquals(true, e.isValid("ng/(kg.min)"));
        assertEquals(true, e.isValid("pt"));
        assertEquals(true, e.isValid("uV"));
        assertEquals(true, e.isValid("10.L/min"));
        assertEquals(true, e.isValid("g/dL"));
        assertEquals(true, e.isValid("ks"));
        assertEquals(true, e.isValid("meq/L"));
        assertEquals(true, e.isValid("mL/s"));
        assertEquals(true, e.isValid("ng/d"));
        assertEquals(true, e.isValid("Sv"));
        assertEquals(true, e.isValid("V"));
        assertEquals(true, e.isValid("a/m"));
        assertEquals(true, e.isValid("g/kg"));
        assertEquals(true, e.isValid("L"));
        assertEquals(true, e.isValid("meq/min"));
        assertEquals(true, e.isValid("mm"));
        assertEquals(true, e.isValid("ng/kg"));
        assertEquals(true, e.isValid("t"));
        assertEquals(true, e.isValid("Wb"));
        //Custom
        assertEquals(false, e.isValid("k2"));
        assertEquals(false, e.isValid("12-1"));
        assertEquals(false, e.isValid("3{2"));
        assertEquals(false, e.isValid("g(24.h)"));
        assertEquals(false, e.isValid("g./(24.h)"));
        assertEquals(false, e.isValid("g/.(24.h)"));
        assertEquals(false, e.isValid("()()()()"));
        assertEquals(false, e.isValid("g(((g)"));
        assertEquals(false, e.isValid("g/()()(24.h)"));
        assertEquals(false, e.isValid("g./(24.h)"));
        assertEquals(false, e.isValid("g/.(24.h)"));
        assertEquals(false, e.isValid("g//(24.h)"));
        assertEquals(false, e.isValid("g..(24.h)"));
        assertEquals(false, e.isValid("g..(24.h{..})"));
        assertEquals(false, e.isValid("(24.h{..}){}"));
        assertEquals(false, e.isValid("(.)"));
        assertEquals(false, e.isValid("/)"));
        assertEquals(false, e.isValid("."));
        assertEquals(false, e.isValid("/"));
        assertEquals(false, e.isValid("("));
        assertEquals(false, e.isValid(")"));
        assertEquals(true, e.isValid("{Feathers}"));
        assertEquals(false, e.isValid("{{Feathers}}"));
        assertEquals(false, e.isValid("(((g.g)))"));
        assertEquals(false, e.isValid("g.((24.h)"));
        assertEquals(false, e.isValid("g.(24.h))"));
        assertEquals(false, e.isValid("g.((24.h))"));
        assertEquals(false, e.isValid("g.024"));
        assertEquals(false, e.isValid("g++3"));
        assertEquals(true, e.isValid("g+3"));
        assertEquals(true, e.isValid("g3"));
        assertEquals(true, e.isValid("g-3"));
        assertEquals(false, e.isValid("g--3"));
        assertEquals(false, e.isValid("g---3"));
        assertEquals(false, e.isValid("g+"));
        assertEquals(false, e.isValid("g-"));
        assertEquals(false, e.isValid("g++"));
        assertEquals(false, e.isValid("g--"));
        assertEquals(false, e.isValid("2+"));
        assertEquals(false, e.isValid("2-"));
        assertEquals(false, e.isValid("+"));
        assertEquals(false, e.isValid("-"));
        assertEquals(false, e.isValid("g+2+2"));
        assertEquals(false, e.isValid("-3.g"));
        assertEquals(false, e.isValid("(g.g)2"));
        assertEquals(false, e.isValid("{Feathers}2"));
        assertEquals(true, e.isValid("(g.g){Feathers}"));
        //These are technically valid in the syntax of Version 2.1
        //assertEquals(false, e.isValid("g0"));
        //assertEquals(false, e.isValid("g+0"));
        //assertEquals(false, e.isValid("g-0"));
        assertEquals(false, e.isValid("+3"));
        assertEquals(false, e.isValid("g.+3"));
        assertEquals(false, e.isValid("g.+3{Feathers}/g"));
        assertEquals(false, e.isValid("(g.g)2"));
        assertEquals(false, e.isValid("(g.g)+2"));
        assertEquals(false, e.isValid("(g.g)-2"));
        assertEquals(false, e.isValid("g{Feathers}-2"));
        assertEquals(true, e.isValid("min.min"));
        assertEquals(true, e.isValid("min.2"));
        assertEquals(true, e.isValid("MIN.2"));
        assertEquals(false, e.isValid("min.MIN"));
        assertEquals(true, e.isValid("MIN.MIN"));
        assertEquals(false, e.isValid("g{Feather Whitespace Test}"));
        assertEquals(false, e.isValid(" g"));
        assertEquals(false, e.isValid("g "));
        assertEquals(false, e.isValid("g. g"));
    }

    @Test
    void convertNumberToUcum() {
        assertEquals("105.10^-2", e.convertNumberToUcum(1.05));
        assertEquals("105.10^-10", e.convertNumberToUcum(1.05E-8));
        assertEquals("50", e.convertNumberToUcum(5e+1));
        assertEquals("5.10^-1", e.convertNumberToUcum(5e-1));
        assertEquals("15.10^7", e.convertNumberToUcum(1.5e+8));
        assertEquals("15.10^-9", e.convertNumberToUcum(1.5e-8));
        assertEquals("15", e.convertNumberToUcum(1.5e+1));
        assertEquals("15", e.convertNumberToUcum(1.5E+1));
        assertEquals("15.10^-2", e.convertNumberToUcum(1.5e-1));
        assertEquals("15.10^-2", e.convertNumberToUcum(1.5E-1));
        assertEquals("15.10^-1", e.convertNumberToUcum(1.5));
        assertEquals("15.10^-1", e.convertNumberToUcum(1.5d));
        assertEquals("15", e.convertNumberToUcum(15.0000000));
        assertEquals("15", e.convertNumberToUcum(15));
    }

    @Test
    void generateCanonizedForm() {
        assertEquals("g, 1.0", e.generateCanonizedForm("g"));
        assertEquals("g-1, 1.0", e.generateCanonizedForm("/g"));
        assertEquals("m, 1.0", e.generateCanonizedForm("m3/m2"));
        assertEquals("s, 216000.0", e.generateCanonizedForm("3600.min"));
        assertEquals("m, 1.0", e.generateCanonizedForm("m3.m-2"));
        assertEquals("m-1.s.g, 1.0", e.generateCanonizedForm("g.s/m"));
    }

    @Test
    void convert() {
        assertEquals(6.3, e.convert("m", "m", 6.3));
        assertEquals(0.0063, e.convert("mm", "m", 6.3));
        assertEquals(25.2, e.convert("4.s/m", "s/m", 6.30));
        assertEquals(133322000, e.convert("m[Hg]", "g.s-2.m-1", 1));
    }
}